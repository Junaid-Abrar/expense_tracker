import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

enum CategoryType { expense, income }

class CategoryModel {
  final String id;
  final String userId;
  final String type; // "expense" or "income"
  final String name; // fallback name
  final String? translationKey; // new field for default categories
  final String? description;
  final int icon;
  final int color;
  final bool isDefault;
  final DateTime createdAt;
  final DateTime updatedAt;

  CategoryModel({
    required this.id,
    required this.userId,
    required this.type,
    required this.name,
    this.translationKey,
    this.description,
    required this.icon,
    required this.color,
    this.isDefault = false,
    required this.createdAt,
    required this.updatedAt,
  });

  factory CategoryModel.fromMap(Map<String, dynamic> map) {
    return CategoryModel(
      id: map['id'] ?? '',
      userId: map['userId'] ?? '',
      type: map['type'] ?? '',
      name: map['name'] ?? '',
      translationKey: map['translationKey'],
      description: map['description'],
      icon: map['icon'] ?? 0,
      color: map['color'] ?? 0,
      isDefault: map['isDefault'] ?? false,
      createdAt: (map['createdAt'] as Timestamp).toDate(),
      updatedAt: (map['updatedAt'] as Timestamp).toDate(),
    );
  }

  factory CategoryModel.fromFirestore(DocumentSnapshot doc) {
    final data = doc.data() as Map<String, dynamic>;
    return CategoryModel.fromMap(data);
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'userId': userId,
      'type': type,
      'name': name,
      'translationKey': translationKey,
      'description': description,
      'icon': icon,
      'color': color,
      'isDefault': isDefault,
      'createdAt': Timestamp.fromDate(createdAt),
      'updatedAt': Timestamp.fromDate(updatedAt),
    };
  }

  CategoryModel copyWith({
    String? id,
    String? userId,
    String? type,
    String? name,
    String? translationKey,
    String? description,
    int? icon,
    int? color,
    bool? isDefault,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return CategoryModel(
      id: id ?? this.id,
      userId: userId ?? this.userId,
      type: type ?? this.type,
      name: name ?? this.name,
      translationKey: translationKey ?? this.translationKey,
      description: description ?? this.description,
      icon: icon ?? this.icon,
      color: color ?? this.color,
      isDefault: isDefault ?? this.isDefault,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
    );
  }

  // Getters
  IconData get iconData => IconData(icon, fontFamily: 'MaterialIcons');
  Color get colorData => Color(color);
  bool get isExpenseCategory => type == 'expense';
  bool get isIncomeCategory => type == 'income';

  // Localization method
  String getLocalizedName(String languageCode) {
    // If it's a custom category (no translationKey), return the original name
    if (translationKey == null) return name;

    final translations = {
      'en': {
        'food_category': 'Food & Dining',
        'groceries_category': 'Groceries',
        'transport_category': 'Transportation',
        'shopping_category': 'Shopping',
        'bills_category': 'Bills & Utilities',
        'healthcare_category': 'Healthcare',
        'entertainment_category': 'Entertainment',
        'education_category': 'Education',
        'travel_category': 'Travel',
        'fitness_category': 'Fitness',
        'clothing_category': 'Clothing',
        'gifts_category': 'Gifts',
        'home_category': 'Home & Garden',
        'pets_category': 'Pets',
        'other_expense_category': 'Other Expense',
        'salary_category': 'Salary',
        'freelance_category': 'Freelance',
        'business_category': 'Business',
        'investment_category': 'Investment',
        'rental_category': 'Rental Income',
        'gift_income_category': 'Gift',
        'bonus_category': 'Bonus',
        'refund_category': 'Refund',
        'other_income_category': 'Other Income',
      },
      'es': {
        'food_category': 'Comida y Restaurantes',
        'groceries_category': 'Comestibles',
        'transport_category': 'Transporte',
        'shopping_category': 'Compras',
        'bills_category': 'Facturas y Servicios',
        'healthcare_category': 'Salud',
        'entertainment_category': 'Entretenimiento',
        'education_category': 'Educación',
        'travel_category': 'Viajes',
        'fitness_category': 'Fitness',
        'clothing_category': 'Ropa',
        'gifts_category': 'Regalos',
        'home_category': 'Casa y Jardín',
        'pets_category': 'Mascotas',
        'other_expense_category': 'Otros Gastos',
        'salary_category': 'Salario',
        'freelance_category': 'Trabajo Independiente',
        'business_category': 'Negocio',
        'investment_category': 'Inversión',
        'rental_category': 'Ingresos de Alquiler',
        'gift_income_category': 'Regalo',
        'bonus_category': 'Bonificación',
        'refund_category': 'Reembolso',
        'other_income_category': 'Otros Ingresos',
      },
      'fr': {
        'food_category': 'Nourriture et Restaurants',
        'groceries_category': 'Épicerie',
        'transport_category': 'Transport',
        'shopping_category': 'Achats',
        'bills_category': 'Factures et Services',
        'healthcare_category': 'Santé',
        'entertainment_category': 'Divertissement',
        'education_category': 'Éducation',
        'travel_category': 'Voyage',
        'fitness_category': 'Fitness',
        'clothing_category': 'Vêtements',
        'gifts_category': 'Cadeaux',
        'home_category': 'Maison et Jardin',
        'pets_category': 'Animaux',
        'other_expense_category': 'Autres Dépenses',
        'salary_category': 'Salaire',
        'freelance_category': 'Travail Indépendant',
        'business_category': 'Affaires',
        'investment_category': 'Investissement',
        'rental_category': 'Revenus Locatifs',
        'gift_income_category': 'Cadeau',
        'bonus_category': 'Prime',
        'refund_category': 'Remboursement',
        'other_income_category': 'Autres Revenus',
      },
      'it': {
        'food_category': 'Cibo e Ristoranti',
        'groceries_category': 'Generi Alimentari',
        'transport_category': 'Trasporti',
        'shopping_category': 'Shopping',
        'bills_category': 'Bollette e Utenze',
        'healthcare_category': 'Sanità',
        'entertainment_category': 'Intrattenimento',
        'education_category': 'Istruzione',
        'travel_category': 'Viaggi',
        'fitness_category': 'Fitness',
        'clothing_category': 'Abbigliamento',
        'gifts_category': 'Regali',
        'home_category': 'Casa e Giardino',
        'pets_category': 'Animali Domestici',
        'other_expense_category': 'Altre Spese',
        'salary_category': 'Stipendio',
        'freelance_category': 'Lavoro Autonomo',
        'business_category': 'Affari',
        'investment_category': 'Investimenti',
        'rental_category': 'Reddito da Affitto',
        'gift_income_category': 'Regalo',
        'bonus_category': 'Bonus',
        'refund_category': 'Rimborso',
        'other_income_category': 'Altri Redditi',
      },
      'de': {
        'food_category': 'Essen & Restaurants',
        'groceries_category': 'Lebensmittel',
        'transport_category': 'Transport',
        'shopping_category': 'Einkaufen',
        'bills_category': 'Rechnungen & Nebenkosten',
        'healthcare_category': 'Gesundheit',
        'entertainment_category': 'Unterhaltung',
        'education_category': 'Bildung',
        'travel_category': 'Reisen',
        'fitness_category': 'Fitness',
        'clothing_category': 'Kleidung',
        'gifts_category': 'Geschenke',
        'home_category': 'Haus & Garten',
        'pets_category': 'Haustiere',
        'other_expense_category': 'Sonstige Ausgaben',
        'salary_category': 'Gehalt',
        'freelance_category': 'Freiberuflich',
        'business_category': 'Geschäft',
        'investment_category': 'Investition',
        'rental_category': 'Mieteinnahmen',
        'gift_income_category': 'Geschenk',
        'bonus_category': 'Bonus',
        'refund_category': 'Erstattung',
        'other_income_category': 'Sonstige Einnahmen',
      },
      'zh': {
        'food_category': '餐饮',
        'groceries_category': '食品杂货',
        'transport_category': '交通',
        'shopping_category': '购物',
        'bills_category': '账单和公用事业',
        'healthcare_category': '医疗保健',
        'entertainment_category': '娱乐',
        'education_category': '教育',
        'travel_category': '旅行',
        'fitness_category': '健身',
        'clothing_category': '服装',
        'gifts_category': '礼品',
        'home_category': '家居和花园',
        'pets_category': '宠物',
        'other_expense_category': '其他支出',
        'salary_category': '工资',
        'freelance_category': '自由职业',
        'business_category': '商业',
        'investment_category': '投资',
        'rental_category': '租金收入',
        'gift_income_category': '礼金',
        'bonus_category': '奖金',
        'refund_category': '退款',
        'other_income_category': '其他收入',
      },
      'ja': {
        'food_category': '食事・外食',
        'groceries_category': '食料品',
        'transport_category': '交通費',
        'shopping_category': 'ショッピング',
        'bills_category': '請求書・光熱費',
        'healthcare_category': '医療・健康',
        'entertainment_category': 'エンターテイメント',
        'education_category': '教育',
        'travel_category': '旅行',
        'fitness_category': 'フィットネス',
        'clothing_category': '衣類',
        'gifts_category': 'ギフト',
        'home_category': '住宅・庭園',
        'pets_category': 'ペット',
        'other_expense_category': 'その他の支出',
        'salary_category': '給与',
        'freelance_category': 'フリーランス',
        'business_category': 'ビジネス',
        'investment_category': '投資',
        'rental_category': '家賃収入',
        'gift_income_category': 'ギフト',
        'bonus_category': 'ボーナス',
        'refund_category': '返金',
        'other_income_category': 'その他の収入',
      },
      'ko': {
        'food_category': '음식 및 외식',
        'groceries_category': '식료품',
        'transport_category': '교통비',
        'shopping_category': '쇼핑',
        'bills_category': '공과금 및 유틸리티',
        'healthcare_category': '의료비',
        'entertainment_category': '엔터테인먼트',
        'education_category': '교육',
        'travel_category': '여행',
        'fitness_category': '피트니스',
        'clothing_category': '의류',
        'gifts_category': '선물',
        'home_category': '집 및 정원',
        'pets_category': '반려동물',
        'other_expense_category': '기타 지출',
        'salary_category': '급여',
        'freelance_category': '프리랜서',
        'business_category': '사업',
        'investment_category': '투자',
        'rental_category': '임대 수입',
        'gift_income_category': '선물',
        'bonus_category': '보너스',
        'refund_category': '환불',
        'other_income_category': '기타 수입',
      },
      'ar': {
        'food_category': 'الطعام والمطاعم',
        'groceries_category': 'البقالة',
        'transport_category': 'النقل',
        'shopping_category': 'التسوق',
        'bills_category': 'الفواتير والمرافق',
        'healthcare_category': 'الرعاية الصحية',
        'entertainment_category': 'الترفيه',
        'education_category': 'التعليم',
        'travel_category': 'السفر',
        'fitness_category': 'اللياقة البدنية',
        'clothing_category': 'الملابس',
        'gifts_category': 'الهدايا',
        'home_category': 'المنزل والحديقة',
        'pets_category': 'الحيوانات الأليفة',
        'other_expense_category': 'مصروفات أخرى',
        'salary_category': 'الراتب',
        'freelance_category': 'العمل الحر',
        'business_category': 'الأعمال',
        'investment_category': 'الاستثمار',
        'rental_category': 'دخل الإيجار',
        'gift_income_category': 'هدية',
        'bonus_category': 'مكافأة',
        'refund_category': 'استرداد',
        'other_income_category': 'دخل آخر',
      },
      'hi': {
        'food_category': 'भोजन और डाइनिंग',
        'groceries_category': 'किराना',
        'transport_category': 'यातायात',
        'shopping_category': 'खरीदारी',
        'bills_category': 'बिल और उपयोगिताएं',
        'healthcare_category': 'स्वास्थ्य देखभाल',
        'entertainment_category': 'मनोरंजन',
        'education_category': 'शिक्षा',
        'travel_category': 'यात्रा',
        'fitness_category': 'फिटनेस',
        'clothing_category': 'कपड़े',
        'gifts_category': 'उपहार',
        'home_category': 'घर और बगीचा',
        'pets_category': 'पालतू जानवर',
        'other_expense_category': 'अन्य खर्च',
        'salary_category': 'वेतन',
        'freelance_category': 'फ्रीलांस',
        'business_category': 'व्यापार',
        'investment_category': 'निवेश',
        'rental_category': 'किराया आय',
        'gift_income_category': 'उपहार',
        'bonus_category': 'बोनस',
        'refund_category': 'वापसी',
        'other_income_category': 'अन्य आय',
      },
      'ur': {
        'food_category': 'کھانا اور ڈائننگ',
        'groceries_category': 'گروسری',
        'transport_category': 'نقل و حمل',
        'shopping_category': 'خریداری',
        'bills_category': 'بل اور یوٹیلٹیز',
        'healthcare_category': 'صحت کی دیکھ بھال',
        'entertainment_category': 'تفریح',
        'education_category': 'تعلیم',
        'travel_category': 'سفر',
        'fitness_category': 'فٹنس',
        'clothing_category': 'کپڑے',
        'gifts_category': 'تحائف',
        'home_category': 'گھر اور باغ',
        'pets_category': 'پالتو جانور',
        'other_expense_category': 'دیگر اخراجات',
        'salary_category': 'تنخواہ',
        'freelance_category': 'فری لانس',
        'business_category': 'کاروبار',
        'investment_category': 'سرمایہ کاری',
        'rental_category': 'کرائے کی آمدنی',
        'gift_income_category': 'تحفہ',
        'bonus_category': 'بونس',
        'refund_category': 'واپسی',
        'other_income_category': 'دیگر آمدنی',
      },
      'tr': {
        'food_category': 'Yemek ve Restoran',
        'groceries_category': 'Market Alışverişi',
        'transport_category': 'Ulaşım',
        'shopping_category': 'Alışveriş',
        'bills_category': 'Faturalar ve Hizmetler',
        'healthcare_category': 'Sağlık',
        'entertainment_category': 'Eğlence',
        'education_category': 'Eğitim',
        'travel_category': 'Seyahat',
        'fitness_category': 'Fitness',
        'clothing_category': 'Giyim',
        'gifts_category': 'Hediyeler',
        'home_category': 'Ev ve Bahçe',
        'pets_category': 'Evcil Hayvanlar',
        'other_expense_category': 'Diğer Giderler',
        'salary_category': 'Maaş',
        'freelance_category': 'Serbest Çalışma',
        'business_category': 'İş',
        'investment_category': 'Yatırım',
        'rental_category': 'Kira Geliri',
        'gift_income_category': 'Hediye',
        'bonus_category': 'Bonus',
        'refund_category': 'İade',
        'other_income_category': 'Diğer Gelir',
      },
      'nl': {
        'food_category': 'Eten & Restaurants',
        'groceries_category': 'Boodschappen',
        'transport_category': 'Vervoer',
        'shopping_category': 'Winkelen',
        'bills_category': 'Rekeningen & Nutsvoorzieningen',
        'healthcare_category': 'Gezondheidszorg',
        'entertainment_category': 'Entertainment',
        'education_category': 'Onderwijs',
        'travel_category': 'Reizen',
        'fitness_category': 'Fitness',
        'clothing_category': 'Kleding',
        'gifts_category': 'Cadeaus',
        'home_category': 'Huis & Tuin',
        'pets_category': 'Huisdieren',
        'other_expense_category': 'Overige Uitgaven',
        'salary_category': 'Salaris',
        'freelance_category': 'Freelance',
        'business_category': 'Zakelijk',
        'investment_category': 'Investering',
        'rental_category': 'Huurinkomsten',
        'gift_income_category': 'Cadeau',
        'bonus_category': 'Bonus',
        'refund_category': 'Terugbetaling',
        'other_income_category': 'Overige Inkomsten',
      },
      'sv': {
        'food_category': 'Mat & Restaurang',
        'groceries_category': 'Matvaror',
        'transport_category': 'Transport',
        'shopping_category': 'Shopping',
        'bills_category': 'Räkningar & Verktyg',
        'healthcare_category': 'Sjukvård',
        'entertainment_category': 'Underhållning',
        'education_category': 'Utbildning',
        'travel_category': 'Resor',
        'fitness_category': 'Fitness',
        'clothing_category': 'Kläder',
        'gifts_category': 'Presenter',
        'home_category': 'Hem & Trädgård',
        'pets_category': 'Husdjur',
        'other_expense_category': 'Övriga Utgifter',
        'salary_category': 'Lön',
        'freelance_category': 'Frilans',
        'business_category': 'Affärer',
        'investment_category': 'Investering',
        'rental_category': 'Hyresinkomst',
        'gift_income_category': 'Present',
        'bonus_category': 'Bonus',
        'refund_category': 'Återbetalning',
        'other_income_category': 'Övriga Inkomster',
      },
      'da': {
        'food_category': 'Mad & Restaurant',
        'groceries_category': 'Dagligvarer',
        'transport_category': 'Transport',
        'shopping_category': 'Shopping',
        'bills_category': 'Regninger & Forsyning',
        'healthcare_category': 'Sundhedspleje',
        'entertainment_category': 'Underholdning',
        'education_category': 'Uddannelse',
        'travel_category': 'Rejser',
        'fitness_category': 'Fitness',
        'clothing_category': 'Tøj',
        'gifts_category': 'Gaver',
        'home_category': 'Hjem & Have',
        'pets_category': 'Kæledyr',
        'other_expense_category': 'Andre Udgifter',
        'salary_category': 'Løn',
        'freelance_category': 'Freelance',
        'business_category': 'Forretning',
        'investment_category': 'Investering',
        'rental_category': 'Lejeindtægt',
        'gift_income_category': 'Gave',
        'bonus_category': 'Bonus',
        'refund_category': 'Refundering',
        'other_income_category': 'Andre Indtægter',
      },
    };

    // Try to get translation, fallback to English, then to original name
    return translations[languageCode]?[translationKey!] ??
        translations['en']?[translationKey!] ??
        name;
  }

  // Default categories with translation keys
  static List<CategoryModel> getDefaultCategories(String userId) {
    final now = DateTime.now();

    return [
      // EXPENSE CATEGORIES
      CategoryModel(
        id: 'food',
        userId: userId,
        type: 'expense',
        name: 'Food & Dining',
        translationKey: 'food_category',
        description: 'Restaurants, meals, snacks',
        icon: Icons.restaurant.codePoint,
        color: 0xFF4CAF50,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'groceries',
        userId: userId,
        type: 'expense',
        name: 'Groceries',
        translationKey: 'groceries_category',
        description: 'Supermarket, food shopping',
        icon: Icons.shopping_cart.codePoint,
        color: 0xFF8BC34A,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'transport',
        userId: userId,
        type: 'expense',
        name: 'Transportation',
        translationKey: 'transport_category',
        description: 'Gas, public transport, taxi',
        icon: Icons.directions_car.codePoint,
        color: 0xFF2196F3,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'shopping',
        userId: userId,
        type: 'expense',
        name: 'Shopping',
        translationKey: 'shopping_category',
        description: 'General purchases',
        icon: Icons.shopping_bag.codePoint,
        color: 0xFFE91E63,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'bills',
        userId: userId,
        type: 'expense',
        name: 'Bills & Utilities',
        translationKey: 'bills_category',
        description: 'Electricity, water, internet',
        icon: Icons.receipt_long.codePoint,
        color: 0xFFFF9800,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'healthcare',
        userId: userId,
        type: 'expense',
        name: 'Healthcare',
        translationKey: 'healthcare_category',
        description: 'Medical, pharmacy, insurance',
        icon: Icons.local_hospital.codePoint,
        color: 0xFFF44336,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'entertainment',
        userId: userId,
        type: 'expense',
        name: 'Entertainment',
        translationKey: 'entertainment_category',
        description: 'Movies, games, subscriptions',
        icon: Icons.movie.codePoint,
        color: 0xFF9C27B0,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'education',
        userId: userId,
        type: 'expense',
        name: 'Education',
        translationKey: 'education_category',
        description: 'Books, courses, school fees',
        icon: Icons.school.codePoint,
        color: 0xFF607D8B,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'travel',
        userId: userId,
        type: 'expense',
        name: 'Travel',
        translationKey: 'travel_category',
        description: 'Flights, hotels, vacation',
        icon: Icons.flight.codePoint,
        color: 0xFF00BCD4,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'fitness',
        userId: userId,
        type: 'expense',
        name: 'Fitness',
        translationKey: 'fitness_category',
        description: 'Gym, sports, equipment',
        icon: Icons.fitness_center.codePoint,
        color: 0xFFCDDC39,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'clothing',
        userId: userId,
        type: 'expense',
        name: 'Clothing',
        translationKey: 'clothing_category',
        description: 'Clothes, shoes, accessories',
        icon: Icons.checkroom.codePoint,
        color: 0xFFFF5722,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'gifts',
        userId: userId,
        type: 'expense',
        name: 'Gifts',
        translationKey: 'gifts_category',
        description: 'Presents, donations',
        icon: Icons.card_giftcard.codePoint,
        color: 0xFFE91E63,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'home',
        userId: userId,
        type: 'expense',
        name: 'Home & Garden',
        translationKey: 'home_category',
        description: 'Furniture, repairs, garden',
        icon: Icons.home.codePoint,
        color: 0xFF795548,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'pets',
        userId: userId,
        type: 'expense',
        name: 'Pets',
        translationKey: 'pets_category',
        description: 'Pet food, vet, grooming',
        icon: Icons.pets.codePoint,
        color: 0xFFFFEB3B,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'other_expense',
        userId: userId,
        type: 'expense',
        name: 'Other Expense',
        translationKey: 'other_expense_category',
        description: 'Miscellaneous expenses',
        icon: Icons.more_horiz.codePoint,
        color: 0xFF9E9E9E,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),

      // INCOME CATEGORIES
      CategoryModel(
        id: 'salary',
        userId: userId,
        type: 'income',
        name: 'Salary',
        translationKey: 'salary_category',
        description: 'Monthly salary, wages',
        icon: Icons.work.codePoint,
        color: 0xFF4CAF50,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'freelance',
        userId: userId,
        type: 'income',
        name: 'Freelance',
        translationKey: 'freelance_category',
        description: 'Freelance work, consulting',
        icon: Icons.laptop.codePoint,
        color: 0xFF2196F3,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'business',
        userId: userId,
        type: 'income',
        name: 'Business',
        translationKey: 'business_category',
        description: 'Business income, profits',
        icon: Icons.business.codePoint,
        color: 0xFF9C27B0,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'investment',
        userId: userId,
        type: 'income',
        name: 'Investment',
        translationKey: 'investment_category',
        description: 'Stocks, dividends, interest',
        icon: Icons.trending_up.codePoint,
        color: 0xFF00BCD4,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'rental',
        userId: userId,
        type: 'income',
        name: 'Rental Income',
        translationKey: 'rental_category',
        description: 'Property rental income',
        icon: Icons.apartment.codePoint,
        color: 0xFFFF9800,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'gift_income',
        userId: userId,
        type: 'income',
        name: 'Gift',
        translationKey: 'gift_income_category',
        description: 'Money gifts received',
        icon: Icons.card_giftcard.codePoint,
        color: 0xFFE91E63,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'bonus',
        userId: userId,
        type: 'income',
        name: 'Bonus',
        translationKey: 'bonus_category',
        description: 'Work bonus, incentives',
        icon: Icons.star.codePoint,
        color: 0xFFFFEB3B,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'refund',
        userId: userId,
        type: 'income',
        name: 'Refund',
        translationKey: 'refund_category',
        description: 'Tax refunds, returns',
        icon: Icons.refresh.codePoint,
        color: 0xFF607D8B,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
      CategoryModel(
        id: 'other_income',
        userId: userId,
        type: 'income',
        name: 'Other Income',
        translationKey: 'other_income_category',
        description: 'Miscellaneous income',
        icon: Icons.more_horiz.codePoint,
        color: 0xFF9E9E9E,
        isDefault: true,
        createdAt: now,
        updatedAt: now,
      ),
    ];
  }
}